# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Docker Compose Action
        uses: isbang/compose-action@v1.5.1

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml --testsuite unit

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4-beta
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  phpinsights:
    runs-on: ubuntu-20.04
    name: PHP Insights checks
    steps:
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
      - run: composer install --prefer-dist --no-progress
      - run: vendor/bin/phpinsights -n --ansi --format=github-action