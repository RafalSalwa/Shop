grumphp:
  hooks_dir: ~
  hooks_preset: local
  git_hook_variables:
    VAGRANT_HOST_DIR: .
    VAGRANT_PROJECT_DIR: /var/www
    EXEC_GRUMPHP_COMMAND: exec
    ENV: { }
  stop_on_failure: false
  ignore_unstaged_changes: false
  hide_circumvention_tip: false
  process_timeout: 60
  ascii:
    failed: grumphp-grumpy.txt
    succeeded: grumphp-happy.txt
  parallel:
    enabled: true
    max_workers: 32
  fixer:
    enabled: true
    fix_by_default: false
  environment:
    files: [ ]
    variables: { }
    paths:
      - bin/
  tasks:
    clover_coverage:
      clover_file: reports/results/phpunit.clover.xml
      level: 10
    codeception:
      config_file: reports/config/codeception.yml
      fail_fast: false
      suite: ~
      test: ~
      xml: true
      html: true
    composer:
      file: ../../composer.json
      no_check_all: false
      no_check_lock: false
      no_check_publish: false
      no_local_repository: false
      with_dependencies: false
      strict: false
    composer_normalize:
      indent_size: ~
      indent_style: ~
      no_check_lock: false
      no_update_lock: true
      verbose: false
    deptrac:
      cache_file: ~
      depfile: reports/config/deptrac.yaml
      formatter: junit
      output: reports/results/deptrac.junit.xml
    doctrine_orm:
      skip_mapping: false
      skip_sync: false
      triggered_by: [ 'php', 'xml', 'yml' ]
    ecs:
      config: reports/config/ecs.php
      level: ~
      paths: [ ]
      files_on_pre_commit: false
      triggered_by: [ 'php' ]
      clear-cache: false
      no-progress-bar: true
    eslint:
      bin: node_modules/.bin/eslint
      triggered_by: [ js, jsx, ts, tsx, vue ]
      whitelist_patterns:
        - /^assets\/js\/(.*)/
      config: .eslintrc.json
      ignore_path: .eslintignore
      debug: false
      format: ~
      max_warnings: ~
      no_eslintrc: false
      quiet: false
    git_blacklist:
      keywords:
        - "die\\("
        - "var_dump\\("
        - "exit;"
        - "dd\\("
        - "dump"
        - "print_r"
      whitelist_patterns: [ ]
      triggered_by: [ 'php' ]
      regexp_type: G
      match_word: false
      ignore_patterns: [ ]
    git_branch_name:
      whitelist:
        - "feat*"
        - "feature*"
        - "fix*"
        - "hotfix*"
        - "chore*"
        - "bug*"
      blacklist:
        - "develop"
        - "master"
        - "main"
      additional_modifiers: ''
      allow_detached_head: true
    infection:
      threads: ~
      test_framework: ~
      only_covered: false
      show_mutations: true
      verbose: false
      configuration: reports/config/infection.json5
      min_msi: ~
      min_covered_msi: ~
      mutators: [ ]
      ignore_patterns: [ ]
      triggered_by: [ php ]
    phparkitect:
      config: reports/config/phparkitect.php
      target_php_version: 8.2
      stop_on_failure: false
    phpcs:
      standard: [ 'PSR2', 'PSR12', 'Squiz', 'Doctrine', 'Symfony', 'SlevomatCodingStandard' ]
      severity: ~
      error_severity: ~
      warning_severity: ~
      tab_width: ~
      report: full
      report_width: ~
      whitelist_patterns: [ ]
      encoding: ~
      ignore_patterns: [ ]
      sniffs: [ ]
      triggered_by: [ php ]
      exclude: [ ]
      show_sniffs_error_path: true
    phpcsfixer:
      allow_risky: ~
      cache_file: ~
      config: ~
      rules: [ ]
      using_cache: ~
      config_contains_finder: true
      verbose: true
      diff: false
      triggered_by: [ 'php' ]
    phplint:
      exclude: [ ]
      jobs: ~
      short_open_tag: false
      ignore_patterns: [ ]
      triggered_by: [ 'php' ]
    phpmd:
      whitelist_patterns:
        - /^src\/Protobuf\/(.*)/
      exclude: [ 'vendor' ]
      report_format: text
      ruleset: [ 'cleancode', 'codesize', 'naming', 'unusedcode' ]
      triggered_by: [ 'php' ]
    phpmnd:
      directory: .
      whitelist_patterns: [ ]
      exclude: [ ]
      exclude_name: [ ]
      exclude_path: [ ]
      extensions: [ ]
      hint: false
      ignore_funcs: [ ]
      ignore_numbers: [ ]
      ignore_strings: [ ]
      strings: false
      triggered_by: [ 'php' ]
    phpstan:
      autoload_file: ~
      configuration: ~
      level: null
      force_patterns: [ ]
      ignore_patterns: [ ]
      triggered_by: [ 'php' ]
      memory_limit: "-1"
      use_grumphp_paths: true
    phpunit:
      config_file: reports/config/phpunit.xml
      testsuite: unit
      group: [ ]
      exclude_group: [ ]
      always_execute: true
      order: null
    phpversion: ~
    #    psalm:
    #      config: psalm.xml
    #      ignore_patterns: [ ]
    #      no_cache: false
    #      report: ~
    #      output_format: null
    #      threads: 1
    #      triggered_by: [ 'php' ]
    #      show_info: false
    rector:
      config: null
      triggered_by: [ 'php' ]
      ignore_patterns: [ ]
      clear_cache: true
      no_diffs: false
    securitychecker_enlightn:
      lockfile: ./composer.lock
      run_always: true
    securitychecker_local:
      lockfile: ./composer.lock
      format: ~
      run_always: true
      no_dev: false
    securitychecker_roave:
      jsonfile: ./composer.json
      lockfile: ./composer.lock
      run_always: true
    securitychecker_symfony:
      lockfile: ./composer.lock
      format: ~
      run_always: false
  testsuites:
    # Specify the test-suite for the git:commit-msg command:
    git_commit_msg:
      tasks: [ ]
    # Specify the test-suite for the git:pre-commit command:
    git_pre_commit:
      tasks: [ ]
  extensions: [ ]