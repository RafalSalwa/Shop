grumphp:
  hooks_dir: ~
  hooks_preset: local
  git_hook_variables:
    EXEC_GRUMPHP_COMMAND: exec
    ENV: { }
  stop_on_failure: false
  ignore_unstaged_changes: true
  hide_circumvention_tip: false
  process_timeout: 60
  ascii:
    failed:
      - grumphp-grumpy.txt
      - nopecat.txt
      - failed.txt
    succeeded:
      - grumphp-happy.txt
      - me-gusta.txt
      - succeeded.txt
  parallel:
    enabled: true
    max_workers: 16
  fixer:
    enabled: false
    fix_by_default: false
  environment:
    files: [ ]
    variables: { }
    paths:
      - bin/
  tasks:
    clover_coverage:
      clover_file: reports/results/phpunit.clover.xml
      level: 10
    codeception:
      config_file: reports/config/codeception.yml
      fail_fast: false
      suite: ~
      test: ~
      xml: true
      html: true
    composer:
      file: composer.json
      no_check_all: false
      no_check_lock: false
      no_check_publish: false
      no_local_repository: false
      with_dependencies: false
      strict: false
    composer_normalize:
      indent_size: 2
      indent_style: space
      no_check_lock: false
      no_update_lock: false
      verbose: false
    composer_require_checker:
      composer_file: 'composer.json'
      config_file: ~
      ignore_parse_errors: false
      triggered_by: [ 'composer.json', 'composer.lock', '*.php' ]
    deptrac:
      cache_file: ~
      depfile: reports/config/deptrac.yaml
      formatter: graphviz-image
      output: var/log/deptrac.png
    doctrine_orm:
      skip_mapping: false
      skip_sync: false
      triggered_by: [ 'php', 'xml', 'yml' ]
    ecs:
      config: reports/config/ecs.php
      level: ~
      paths: [ ]
      files_on_pre_commit: false
      triggered_by: [ 'php' ]
      clear-cache: false
      no-progress-bar: true
    eslint:
      bin: node_modules/.bin/eslint
      triggered_by: [ js, jsx, ts, tsx, vue ]
      whitelist_patterns:
        - /^assets\/js\/(.*)/
      config: .eslintrc.json
      ignore_path: .eslintignore
      debug: false
      format: ~
      max_warnings: ~
      no_eslintrc: false
      quiet: false
    git_blacklist:
      keywords:
        - "die\\("
        - "var_dump\\("
        - "exit;"
        - "dd\\("
        - "dump"
        - "print_r"
      whitelist_patterns: [ ]
      triggered_by: [ 'php' ]
      regexp_type: G
      match_word: false
      ignore_patterns: [ ]
    git_branch_name:
      whitelist:
        - "feat*"
        - "feature*"
        - "fix*"
        - "hotfix*"
        - "chore*"
        - "bug*"
      blacklist:
        - "develop"
        - "master"
        - "main"
      additional_modifiers: ''
      allow_detached_head: true
    infection:
      threads: ~
      test_framework: ~
      only_covered: false
      show_mutations: true
      verbose: false
      configuration: reports/config/infection.json5
      min_msi: ~
      min_covered_msi: ~
      mutators: [ ]
      ignore_patterns: [ ]
      triggered_by: [ php ]
    jsonlint:
      ignore_patterns: [ ]
      detect_key_conflicts: true
    phan:
      config_file: .phan/config.php
      output_mode: text
      output: null
      triggered_by: [ php ]
    phparkitect:
      config: config/analysis/phparkitect.php
      target_php_version: "8.2"
      stop_on_failure: false
    phpcs:
      standard: [ 'config/analysis/phpcs.xml' ]
      severity: ~
      error_severity: ~
      warning_severity: ~
      tab_width: ~
      report: full
      report_width: ~
      whitelist_patterns: ["/^src/", "/^tests/" ]
      encoding: ~
      ignore_patterns: [ "/^migrations/" ]
      sniffs: [ ]
      triggered_by: [ php ]
      exclude: [ ]
      show_sniffs_error_path: true
    phpcsfixer:
      allow_risky: true
      cache_file: var/cache/dev/.php-cs-fixer.cache
      config: config/analysis/php-cs-fixer.php
      rules: [ ]
      using_cache: true
      config_contains_finder: true
      verbose: true
      diff: true
      triggered_by: [ 'php' ]
    phplint:
      exclude: [ ]
      jobs: ~
      short_open_tag: false
      ignore_patterns: [ ]
      triggered_by: [ 'php' ]
    phpmd:
      whitelist_patterns:
        - /^src\/Protobuf\/(.*)/
      exclude: [ 'vendor' ]
      report_format: text
      ruleset: [ reports/config/phpmd.xml ]
      triggered_by: [ 'php' ]
    phpmnd:
      directory: .
      whitelist_patterns: [ ]
      exclude: [ "vendor","var" ]
      exclude_name: [ ]
      exclude_path: [ ]
      extensions: [ ]
      hint: false
      ignore_funcs: [ ]
      ignore_numbers: [ ]
      ignore_strings: [ ]
      strings: false
      triggered_by: [ 'php' ]
    phpstan:
      autoload_file: ~
      configuration: config/analysis/phpstan.neon
      level: null
      force_patterns: [ ]
      ignore_patterns: [ ]
      triggered_by: [ 'php' ]
      memory_limit: "-1"
      use_grumphp_paths: false
    phpunit:
      config_file: config/analysis/phpunit.xml
      testsuite: unit
      group: [ ]
      exclude_group: [ ]
      always_execute: true
      order: null
    psalm:
      config: config/analysis/psalm.xml
      ignore_patterns: [ ]
      no_cache: false
      report: ~
      output_format: null
      threads: 10
      triggered_by: [ 'php' ]
      show_info: false
    rector:
      config: rector.php
      triggered_by: [ 'php' ]
      ignore_patterns: [ ]
      clear_cache: true
      no_diffs: false
    securitychecker_composeraudit:
      format: null
      locked: true
      no_dev: false
      run_always: true
      working_dir: .
    securitychecker_enlightn:
      lockfile: ./composer.lock
      run_always: true
    securitychecker_local:
      lockfile: ./composer.lock
      format: ~
      run_always: true
      no_dev: false
    securitychecker_roave:
      jsonfile: ./composer.json
      lockfile: ./composer.lock
      run_always: true
    securitychecker_symfony:
      lockfile: ./composer.lock
      format: ~
      run_always: false
    twigcs:
      path: 'templates/'
      severity: 'warning'
      display: 'all'
      ruleset: 'FriendsOfTwig\Twigcs\Ruleset\Official'
      triggered_by: [ 'twig' ]
      exclude: [ ]
  testsuites:
    # Specify the test-suite for the git:commit-msg command:
    git_commit_msg:
      tasks:
        - git_blacklist
        - git_branch_name
    # Specify the test-suite for the git:pre-commit command:
    git_pre_commit:
      tasks:
        - composer
        - composer_normalize
        #        - composer_require_checker
        #        - doctrine_orm
        - eslint
        - jsonlint
        - phparkitect
        - phpcs
        - phpcsfixer
        - phplint
        - phpmnd
        - phpunit
        - psalm
        - rector
        - securitychecker_composeraudit
        - securitychecker_enlightn
        - securitychecker_local
        - securitychecker_roave
        - securitychecker_symfony
        - twigcs
  extensions: [ ]
