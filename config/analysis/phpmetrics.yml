composer: false  # Analyse the composer.* files
includes: #  directory and files to analyze, relative to config file directory
  - "../../src"
excludes: # regex of files (or directory) to exclude from analyze
  - tests
  - Protobuf
  - vendor
extensions: # default: ["php", "inc"]
  - php
  - php8
report: # list of reports to generate
  html: "../../var/reports/phpmetrics/html"
  violations: "../../var/reports/phpmetrics.violations.xml"

# "layers" of code. You can group your classes and packages by regex,
# to visualise specific HTML report for each of them
groups:
  - name: Controllers
    match: "!Controller!i"
  - name: Repositories
    match: "!Repository!i"
  - name: Entities
    match: "!Entity!i"
  - name: Events
    match: "!Event!i"
  - name: Messages
    match: "!Mess!i"
  - name: Services
    match: "!Service!i"
plugins:
  git:
    binary: git # if defined, runs git analyze
  junit:
    file: "var/reports/phpunit.junit.xml" # if defined, analyze junit report

# You can define patterns of code to search
# That's useful for Continuous Integration
searches:
  Repository which uses Service: # You can name your search as you want
    type: class
    nameMatches: ".*Repository.*"
    usesClasses:
      - ".*Service"
    failIfFound: false # stop execution if pattern of code is found
  Class with too complex code:
    type: class
    ccn: ">=10"
    failIfFound: false
  Class with too many responsabilitites:
    type: class
    lcom: ">=3"
    failIfFound: false
  Controller which use doctrine:
    type: class
    nameMatches: ".*Controller.*"
    usesClasses:
      - ".*Connection.*"
    failIfFound: false
