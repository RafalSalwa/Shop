parameters:

services:
  _defaults:
    autowire: true
    autoconfigure: true
    bind:
      $fromEmail: '%env(MAILER_FROM)%'
      $authServiceDsn: '%env(GRPC_AUTH_SERVICE_DSN)%'
      $userServiceDsn: '%env(GRPC_USER_SERVICE_DSN)%'
  Redis:
    class: Redis
    calls:
      - connect:
          - '%env(REDIS_HOST)%'
          - '%env(int:REDIS_PORT)%'
      - auth:
          - '%env(REDIS_PASSWORD)%'
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
    arguments:
      - '@Redis'

  app.twig_extension:
    class: Twig\DeferredExtension\DeferredExtension
    public: false
    tags:
      - { name: twig.extension }

  App\ValueResolver\CartItemTypeResolver:
    tags:
      - controller.argument_value_resolver:
          name: cart_item_type
          priority: 150

  League\Bundle\OAuth2ServerBundle\Entity\AccessToken:
    class: App\Entity\AccessToken
  League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface:
    class: App\Repository\AccessTokenRepository
    decorates: 'League\Bundle\OAuth2ServerBundle\Repository\AccessTokenRepository'

  App\Service\CartAddService:
    arguments:
      $entityManager: '@doctrine.orm.entity_manager'


  App\Security\Voter\AddToCartVoter:
    tags: [ 'security.voter' ]
  App\Security\Voter\SubscriptionPlanVoter:
    tags: [ 'security.voter' ]
  App\Security\Voter\OrderStatusVoter:
    tags: [ 'security.voter' ]

  App\Security\Registration\UserRegistrarInterface: '@App\Security\Registration\AuthApiUserRegistrar'
